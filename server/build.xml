<project name="oneboard" default="war">

    <property file="build.properties"/>
    <property environment="env"/>
    <property name="build.dir" location="../out/exploded"/>
    <property name="war.dir" location="${build.dir}/server"/>
    <property name="webclass.dir" location="${war.dir}/WEB-INF/classes"/>

    <path id="classpath">
        <fileset dir="${webclass.dir}"/>
        <fileset dir="${appengine.sdk}/lib/user">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${appengine.sdk}/lib/shared">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="../lib/java">
            <include name="*.jar"/>
        </fileset>
    </path>

    <fail message="Please define the appengine.sdk property to point to your SDK directory">
        <condition>
            <not>
                <and>
                    <isset property="appengine.sdk"/>
                    <available file="${appengine.sdk}/config/user/ant-macros.xml"/>
                </and>
            </not>
        </condition>
    </fail>

    <!-- Pick up the Ant macros and taskdefs for App Engine -->
    <import file="${appengine.sdk}/config/user/ant-macros.xml"/>


    <!-- Remote debug port for dev_appserver -->
    <property name="debug.port" value="5005"/>

    <!-- HTTP port for dev_appserver -->
    <property name="http.port" value="8080"/>

    <!-- Name of log file to write logs to -->
    <property name="log.file" value="app.log"/>

    <!-- Number of days worth of logs to retrieve -->
    <property name="log.days" value="2"/>


    <target name="war" depends="compile"
            description="Assemble the application directory">
        <mkdir dir="${war.dir}"/>
        <copy todir="${war.dir}">
            <fileset dir="web">
                <exclude name="**/.svn/**"/>
                <exclude name="**/*~"/>
            </fileset>
        </copy>
        <copy todir="${webclass.dir}/META-INF">
            <fileset dir="META-INF">
                <exclude name="**/.svn/**"/>
                <exclude name="**/*~"/>
            </fileset>
        </copy>
        <copy todir="${war.dir}/WEB-INF/lib">
            <fileset dir="../lib/java">
                <exclude name="**/.svn/**"/>
                <exclude name="**/*~"/>
            </fileset>
            <fileset dir="${appengine.sdk}/lib/user">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${appengine.sdk}/lib/user/orm">
                <include name="*.jar"/>
            </fileset>
        </copy>
        <!--<enhance_war war="${war.dir}"/>-->
    </target>

    <target name="enhance" depends="war"
            description="Enhance the classes after compilation">
        <enhance_war war="${war.dir}"/>
    </target>

    <target name="compile"
            description="Compile the application servlet code">
        <mkdir dir="${webclass.dir}"/>
        <javac srcdir="../java/src" destdir="${webclass.dir}" debug="true"/>
        <javac srcdir="src/parser" destdir="${webclass.dir}" debug="true">
            <classpath refid="classpath"/>
        </javac>
        <javac srcdir="src/jdo" destdir="${webclass.dir}" debug="true">
            <classpath refid="classpath"/>
        </javac>
        <javac srcdir="src/web" destdir="${webclass.dir}" debug="true">
            <classpath refid="classpath"/>
        </javac>
        <copy todir="${webclass.dir}">
            <fileset dir="src/parser">
                <exclude name="**/.svn/**"/>
                <exclude name="**/*~"/>
                <exclude name="**/*.java"/>
            </fileset>
            <fileset dir="src/jdo">
                <exclude name="**/.svn/**"/>
                <exclude name="**/*~"/>
                <exclude name="**/*.java"/>
            </fileset>
            <fileset dir="src/web">
                <exclude name="**/.svn/**"/>
                <exclude name="**/*~"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>

    <target name="clean"
            description="Force a clean slate to rebuild">
        <delete dir="${build.dir}"/>
    </target>

    <target name="runserver" depends="war"
            description="Run the dev_appserver">
        <dev_appserver war="${war.dir}" port="${http.port}"/>
    </target>

    <target name="dev_appserver" depends="runserver"/>

    <target name="debug" depends="war"
            description="Launches dev_appserver with remote debugging enabled">
        <echo message="Launching dev_appserver on Web port ${http.port}, Java remote debug port ${debug.port}"/>
        <dev_appserver war="${war.dir}" port="${http.port}">
            <options>
                <arg value="--jvm_flag=-Xdebug"/>
                <arg value="--jvm_flag=-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=${debug.port}"/>
            </options>
        </dev_appserver>
    </target>


    <target name="update" depends="enhance"
            description="Uploads the application, including indexes">
        <appcfg action="update" war="${war.dir}"/>
    </target>

    <target name="update_indexes" depends="enhance"
            description="Uploads only the application's indexes">
        <appcfg action="update_indexes" war="${war.dir}"/>
    </target>

    <target name="rollback" depends="enhance"
            description="Rolls back any in-progress application update">
        <appcfg action="rollback" war="${war.dir}"/>
    </target>

    <target name="request_logs"
            description="Downloads the application's logs">
        <appcfg action="request_logs" war="${war.dir}">
            <options>
                <arg value="--num_days=${log.days}"/>
            </options>
            <args>
                <arg value="${log.file}"/>
            </args>
        </appcfg>
    </target>
</project>
